import{_b as f,ac as O,cc as t,dc as i,e as _,ec as S,fc as I,g as l,hc as R,ic as h,j as d,jc as m,kc as g,mc as C}from"./chunk-LPY2TOTA.js";import{a as u,g as o}from"./chunk-RA2WU32H.js";var N=class e{constructor(r){this.firestore=r}obtenerEspecialidadesUnicas(){return o(this,null,function*(){let r=t(this.firestore,"sala_medica_usuarios"),s=yield I(r),a=new Set;return s.forEach(p=>{let n=p.data();n.rol==="especialista"&&Array.isArray(n.especialidades)&&n.especialidades.forEach(c=>a.add(c))}),Array.from(a).sort()})}obtenerTodosLosUsuarios(){let r=t(this.firestore,"sala_medica_usuarios");return O(r,{idField:"id"})}actualizarEstadoEspecialista(r,s){return o(this,null,function*(){let a=i(this.firestore,"sala_medica_usuarios",r);yield m(a,{aprobado:s})})}obtenerUsuario(r){return o(this,null,function*(){try{let s=i(this.firestore,"sala_medica_usuarios",r),a=yield S(s);return a.exists()?u({id:a.id},a.data()):(console.log("No se encontr el usuario con UID:",r),null)}catch(s){throw console.error("Error al obtener usuario:",s),s}})}actualizarDisponibilidad(r,s){return o(this,null,function*(){let a=i(this.firestore,"sala_medica_usuarios",r);yield m(a,{disponibilidad:s})})}guardarUsuario(r,s){return o(this,null,function*(){let a=i(this.firestore,`sala_medica_usuarios/${r}`);yield h(a,s)})}listarUsuariosPorRol(r){return o(this,null,function*(){let s=t(this.firestore,"sala_medica_usuarios"),a=R(s,g("rol","==",r));return(yield I(a)).docs.map(c=>u({id:c.id},c.data()))})}getUsuarios(){let r=t(this.firestore,"sala_medica_usuarios");return O(r,{idField:"uid"}).pipe(_(s=>console.log("Datos obtenidos de usuarios:",s)))}static \u0275fac=function(s){return new(s||e)(d(f))};static \u0275prov=l({token:e,factory:e.\u0275fac,providedIn:"root"})};var E=class e{constructor(r){this.toastr=r}mostrarMensaje(r,s,a="info"){switch(a){case"success":{this.toastr.success(r,s);break}case"error":{this.toastr.error(r,s);break}case"info":{this.toastr.info(r,s);break}}}mensajeErrorRegistro(r){console.log("error de mensaje registro toas"),console.log(r),console.log("-----");let a=new Map([["auth/email-already-in-use","El correo ingresado ya est\xE1 en uso."],["auth/weak-password","Ingrese un minimo de 6 caracteristicas para su contrase\xF1a"],["auth/invalid-email","Ingrese un correo val\xEDdo"],["auth/missing-email","El campo correo esta vacio"],["auth/missing-password","El campo clave esta vacio"],["auth/admin-restricted-operation","Los campos estan vacios!"],["auth/too-many-requests","Espera un momento, para poder realizar la accion."],["auth/user-not-found","No se encontro el usuario"],["auth/wrong-password","La contrase\xF1a es incorrecta"],["auth/invalid-credential","Credenciales inv\xE1lidas. Intente nuevamente."]]).get(r.code)||"Ocurri\xF3 un error desconocido. Intente m\xE1s tarde.";this.mostrarTastr(!1,a),console.error("(Registro.Component.ts): Error en el registro:",r.code),console.error("(Registro.Component.ts): Detalles del error:",JSON.stringify(r))}mostrarTastr(r,s){r?this.toastr.success(s,"Registro"):this.toastr.error(s,"Registro")}obtenerClase(r){switch(r){case"success":return["toast-success"];case"error":return["toast-error"];case"info":default:return["toast-info"]}}static \u0275fac=function(s){return new(s||e)(d(C))};static \u0275prov=l({token:e,factory:e.\u0275fac,providedIn:"root"})};export{N as a,E as b};
